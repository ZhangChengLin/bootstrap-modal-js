{"version":3,"file":"bootstrap-offcanvas-js.esm.min.js","sources":["../src/offcanvas/js/offcanvas-header.js","../src/offcanvas/js/util/index.js","../src/offcanvas/js/offcanvas.js","../src/offcanvas/js/offcanvas-body.js","../src/offcanvas/js/bootstrap-offcanvas-js.js"],"sourcesContent":["\n/**\n * @param {Node | string} HeaderTitleElement\n */\nconst offcanvasHeader = (HeaderTitleElement) => {\n  let header = document.createElement('div')\n  let title = document.createElement('h5')\n  let btn = document.createElement('button')\n\n  header.className = 'offcanvas-header'\n\n  title.className = 'offcanvas-title'\n  title.id = 'offcanvasLabel'\n  title.append(HeaderTitleElement)\n\n  btn.className = 'btn-close text-reset'\n  btn.type = 'button'\n  btn.dataset['bsDismiss'] = 'offcanvas'\n  btn.ariaLabel = 'Close'\n\n  header.append(title, btn)\n  return header\n}\n\nexport default offcanvasHeader\n","const getTimeString = () => {\n  return new Date().getTime().toString()\n}\n\nexport {\n  getTimeString\n}\n","import offcanvasHeader from \"./offcanvas-header\";\nimport offcanvasBody from \"./offcanvas-body\";\nimport {getTimeString} from \"./util/index\";\n\n\n/**\n * @param {Node|string} headerElement\n * @param {Node|string} bodyElement\n * @param {string} placement\n */\nconst offcanvas = (headerElement, bodyElement, placement = 'start') => {\n  let _offcanvas = document.createElement('div')\n  let header = offcanvasHeader(headerElement)\n  let body = offcanvasBody(bodyElement)\n  let timeString = getTimeString()\n\n  switch (placement) {\n    case 'start':\n    case 'top':\n    case 'end':\n    case 'bottom':\n      break;\n    default:\n      throw `placement 参数错误`\n  }\n\n  _offcanvas.className = `offcanvas offcanvas-${placement}`\n  _offcanvas.id = timeString\n  _offcanvas.tabIndex = -1\n  _offcanvas.setAttribute('aria-labelledby', 'offcanvasLabel')\n\n  _offcanvas.append(header, body)\n\n  return _offcanvas\n}\n\nexport default offcanvas\n","/**\n * @param {Node | string} BodyContentElement\n */\nconst offcanvasBody = (BodyContentElement) => {\n  let offcanvas_body = document.createElement('div')\n\n  offcanvas_body.className = 'offcanvas-body'\n\n  offcanvas_body.append(BodyContentElement)\n\n  return offcanvas_body\n}\n\nexport default offcanvasBody\n","import offcanvas from \"./offcanvas\";\nimport {getTimeString} from \"./util/index\";\n\n\nconst bootstrapOffcanvasJs = (headerNodeElement, bodyNodeElement, Placement, Options, EventType, CallbackFunction) => {\n  let timeString = getTimeString()\n\n  document.body.append(offcanvas(headerNodeElement, bodyNodeElement, Placement, Options))\n  return timeString\n};\n\nexport default bootstrapOffcanvasJs;\n"],"names":["getTimeString","Date","getTime","toString","offcanvas","headerElement","bodyElement","placement","_offcanvas","document","createElement","header","HeaderTitleElement","title","btn","className","id","append","type","dataset","ariaLabel","offcanvasHeader","body","BodyContentElement","offcanvas_body","offcanvasBody","timeString","tabIndex","setAttribute","bootstrapOffcanvasJs","headerNodeElement","bodyNodeElement","Placement","Options","EventType","CallbackFunction"],"mappings":";;;;;;;;;;;;AAIA,MCJMA,EAAgB,KACb,IAAIC,MAAOC,UAAUC,WCSxBC,EAAY,CAACC,EAAeC,EAAaC,EAAY,WACzD,IAAIC,EAAaC,SAASC,cAAc,OACpCC,EFRkB,CAACC,IACvB,IAAID,EAASF,SAASC,cAAc,OAChCG,EAAQJ,SAASC,cAAc,MAC/BI,EAAML,SAASC,cAAc,UAcjC,OAZAC,EAAOI,UAAY,mBAEnBF,EAAME,UAAY,kBAClBF,EAAMG,GAAK,iBACXH,EAAMI,OAAOL,GAEbE,EAAIC,UAAY,uBAChBD,EAAII,KAAO,SACXJ,EAAIK,QAAmB,UAAI,YAC3BL,EAAIM,UAAY,QAEhBT,EAAOM,OAAOJ,EAAOC,GACdH,GETMU,CAAgBhB,GACzBiB,ECVgB,CAACC,IACrB,IAAIC,EAAiBf,SAASC,cAAc,OAM5C,OAJAc,EAAeT,UAAY,iBAE3BS,EAAeP,OAAOM,GAEfC,GDGIC,CAAcnB,GACrBoB,EAAa1B,IAEjB,OAAQO,GACN,IAAK,QACL,IAAK,MACL,IAAK,MACL,IAAK,SACH,MACF,QACE,KAAM,iBAUV,OAPAC,EAAWO,UAAY,uBAAuBR,IAC9CC,EAAWQ,GAAKU,EAChBlB,EAAWmB,UAAY,EACvBnB,EAAWoB,aAAa,kBAAmB,kBAE3CpB,EAAWS,OAAON,EAAQW,GAEnBd,GE7BHqB,EAAuB,CAACC,EAAmBC,EAAiBC,EAAWC,EAASC,EAAWC,KAC/F,IAAIT,EAAa1B,IAGjB,OADAS,SAASa,KAAKL,OAAOb,EAAU0B,EAAmBC,EAAiBC,IAC5DN"}